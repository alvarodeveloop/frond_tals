{"version":3,"sources":["webpack:///./src/app/admin/subscription/form/form.component.css","webpack:///./src/app/admin/subscription/form/form.component.html","webpack:///./src/app/admin/subscription/form/form.component.ts","webpack:///./src/app/admin/subscription/subscription.component.css","webpack:///./src/app/admin/subscription/subscription.component.html","webpack:///./src/app/admin/subscription/subscription.component.ts","webpack:///./src/app/admin/subscription/subscription.module.ts","webpack:///./src/app/admin/subscription/subscription.routes.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mB;;;;;;;;;;;ACAA,mOAAmO,2YAA2Y,6CAA6C,oeAAoe,kDAAkD,4gBAA4gB,8CAA8C,sqBAAsqB,6CAA6C,w2BAAw2B,cAAc,2UAA2U,sOAAsO,4J;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnzH;AACiB;AACX;AAEb;AACgC;AAW3E;IAOE,uBACU,IAA0B,EAC1B,GAAgB,EAChB,MAAc,EACd,OAAuB,EACvB,MAAqB;QAJrB,SAAI,GAAJ,IAAI,CAAsB;QAC1B,QAAG,GAAH,GAAG,CAAa;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAe;IACzB,CAAC;IAEP,gCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,QAAQ,EAAE;QACf,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;QACnD,EAAE,EAAC,EAAE,CAAC,EAAC;YACL,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBAElC,KAAI,CAAC,YAAY,GAAG,GAAG;gBACvB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa;gBAErE,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACpB,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,QAAQ,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAqB;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAC5B,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3B,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxD,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClE,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACzD,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;SACpC,CAAC;IACJ,CAAC;IAED,sBAAI,4BAAC;aAAL,cAAS,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAC,CAAC;;;OAAA;IAEvC,oCAAY,GAAZ,UAAa,CAAC;QACZ,EAAE,EAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC;YACnB,IAAI,CAAC,UAAU,GAAG,UAAU;QAC9B,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,UAAU,GAAG,aAAa;QACjC,CAAC;IACH,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAI;QAAb,iBA2BC;QA1BC,IAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,GAAG,IAAI;QAErB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC;YACvB,MAAM,CAAC;QACT,CAAC;QAED,EAAE,EAAC,IAAI,CAAC,EAAE,CAAC,EAAC;YACV,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC1C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAC,QAAQ,CAAC;gBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;YAC/C,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,QAAQ,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;gBAChC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAC,QAAQ,CAAC;gBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;YAC/C,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,QAAQ,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;IAEH,CAAC;IA/EU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCASiB,iFAAmB;YACrB,0DAAW;YACR,sDAAM;YACL,8DAAc;YACf,wDAAa;OAZpB,aAAa,CAgFzB;IAAD,oBAAC;CAAA;AAhFyB;;;;;;;;;;;;AChB1B,mB;;;;;;;;;;;ACAA,osC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACe;AAC1B;AAEiC;AAC7B;AAU3C;IAKE,+BAAoB,GAAgB,EAAU,IAAyB,EAAU,MAAqB,EAAU,MAAc;QAA1G,QAAG,GAAH,GAAG,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF9H,SAAI,GAAqB,EAAE;IAI3B,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE;IACb,CAAC;IAED,oCAAI,GAAJ;QAAA,iBAOC;QANC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3B,KAAI,CAAC,IAAI,GAAG,GAAG;YACf,KAAI,CAAC,WAAW,EAAE;QACpB,CAAC,EAAC,aAAG;YACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QACtC,CAAC,CAAC;IACJ,CAAC;IAED,2CAAW,GAAX;QAAA,iBA4CC;QA3CC,EAAE,EAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,EAAC;YAC5C,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE;QACxC,CAAC;QAED,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE;gBACP,EAAC,MAAM,EAAE,QAAQ,EAAC;gBAClB,EAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAS,CAAC;wBACtC,MAAM,CAAC,CAAC,GAAC,QAAQ;oBACnB,CAAC,EAAC;gBACF,EAAC,MAAM,EAAE,QAAQ,EAAC;gBAClB,EAAC,MAAM,EAAE,gBAAgB,EAAC,QAAQ,EAAE,UAAS,GAAG;wBAC9C,MAAM,CAAC,GAAG,CAAC,MAAM;oBACnB,CAAC,EAAC;gBACF,EAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAG,UAAS,GAAG;wBACxC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa;oBACvC,CAAC,EAAC;gBACF,EAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAS,EAAE;wBAClC,IAAI,IAAI,GAAG,ubAKW;wBACtB,MAAM,CAAC,IAAI;oBACb,CAAC,EAAC;aACH;YACD,WAAW,EAAE,UAAC,GAAS,EAAE,IAAoB,EAAE,KAAa;gBACxD,IAAM,IAAI,GAAG,KAAI,CAAC;gBAClB,uDAAuD;gBACvD,8DAA8D;gBAC9D,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC7B,CAAC,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;oBACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;gBAEH,CAAC,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;oBACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,GAAG,CAAC;YACf,CAAC;SACF,CAAC;IACJ,CAAC;IAED,4CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,8CAAc,GAAd,UAAe,IAAI;QAAnB,iBASC;QARC,EAAE,EAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,EAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBACrC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAC,OAAO,CAAC;gBACjD,KAAI,CAAC,IAAI,EAAE;YACb,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAC,QAAQ,CAAC;YAC/C,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAjFU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAMyB,0DAAW,EAAgB,iFAAmB,EAAkB,wDAAa,EAAkB,sDAAM;OALnH,qBAAqB,CAkFjC;IAAD,4BAAC;CAAA;AAlFiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfO;AACM;AACD;AACmB;AAEA;AAEf;AACG;AAWrD;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,8DAAS,CAAC;gBAChC,0DAAW;gBACX,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,6EAAqB,EAAE,kEAAa,CAAC;SACrD,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;ACjBiC;AACX;AAE9C,IAAM,SAAS,GAAY;IAChC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAqB;KACjC;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kEAAa;KACzB;CACF","file":"admin-subscription-subscription-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"pd-20 bg-white border-radius-4 box-shadow mb-30 animated slideInRight\\\">\\r\\n  <div class=\\\"col-md-12 col-sm-12 col-lg-12 col-12\\\">\\r\\n    <h3 class=\\\"text-center\\\">Registro de Subscripciones&nbsp;<i class=\\\"fa fa-calendar\\\"></i></h3>\\r\\n    <br/>\\r\\n    <form [formGroup]=\\\"formSub\\\" action=\\\"\\\" (ngSubmit)=\\\"onSubmit(formSub)\\\">\\r\\n      <div class=\\\"row form-group\\\">\\r\\n        <div class=\\\"col-md-6 col-sm-6 col-6\\\">\\r\\n          <label for=\\\"\\\" class=\\\"form-control-label\\\">Título</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"titulo\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.titulo.errors }\\\">\\r\\n          <div *ngIf=\\\"f.titulo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.titulo.errors.required\\\">El Título es requerido</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 col-sm-6 col-6\\\">\\r\\n          <label for=\\\"\\\" class=\\\"form-control-label\\\">Descripción</label>\\r\\n          <textarea name=\\\"descripcion\\\" id=\\\"descripcion\\\" formControlName=\\\"descripcion\\\" style=\\\"height: 100px\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.descripcion.errors }\\\"></textarea>\\r\\n          <div *ngIf=\\\"f.descripcion.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.descripcion.errors.required\\\">La descripción es requerido</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row form-group\\\">\\r\\n        <div class=\\\"col-md-6 col-sm-6 col-6\\\">\\r\\n          <label for=\\\"\\\" class=\\\"form-control-label\\\">Período</label>\\r\\n          <select name=\\\"periodo\\\" id=\\\"periodo\\\" class=\\\"form-control\\\" formControlName=\\\"periodo\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.periodo.errors }\\\">\\r\\n            <option value=\\\"1\\\">Mensual</option>\\r\\n            <option value=\\\"3\\\">Trimestral</option>\\r\\n            <option value=\\\"6\\\">6 Meses</option>\\r\\n            <option value=\\\"12\\\">Anual</option>\\r\\n          </select>\\r\\n          <div *ngIf=\\\"f.periodo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"f.periodo.errors.required\\\">El tipo es requerido</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 col-sm-6 col-12\\\">\\r\\n          <label for=\\\"\\\" class=\\\"form-control-label\\\">Precio</label>\\r\\n          <input type=\\\"number\\\" step=\\\"any\\\" min=\\\"1\\\" class=\\\"form-control\\\" formControlName=\\\"precio\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.precio.errors }\\\">\\r\\n          <div *ngIf=\\\"f.precio.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.precio.errors.required\\\">El precio es requerido</div>\\r\\n              <div *ngIf=\\\"f.precio.errors.pattern\\\">El campo solo debe contener los siguientes caracteres (0-9 , .)</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row form-group\\\" *ngIf=\\\"registerById\\\">\\r\\n        <div class=\\\"col-md-6 col-sm-6 col-6  custom-control custom-checkbox mb-5 pl-5\\\">\\r\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"activo\\\" id=\\\"activo\\\" id=\\\"changeStatu\\\" [checked]=\\\"registerById.activo\\\" (click)=\\\"changeStatus($event)\\\">\\r\\n          <label for=\\\"changeStatu\\\" class=\\\"custom-control-label\\\">Estado</label>\\r\\n          <br>\\r\\n          <label for=\\\"changeStatu\\\" class=\\\"custom-control-label\\\">{{ nameStatus }}</label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row form-group\\\">\\r\\n        <div class=\\\"col-md-12 col-sm-12 col-12\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 col-sm-4 col-12 offset-md-2 offset-sm-2\\\">\\r\\n              <button class=\\\"btn btn-outline-success btn-block\\\">Enviar&nbsp;<i class=\\\"fa fa-send\\\"></i></button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 col-sm-4 col-12\\\">\\r\\n              <a routerLink=\\\"/admin/subscription\\\"  class=\\\"btn btn-outline-primary btn-block\\\">Cancelar&nbsp;<i class=\\\"fa fa-remove\\\"></i></a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport { Router, ActivatedRoute } from '@angular/router'\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SubscriptionService } from '../../../service/subscription.service'\r\n\r\nimport { Subscription } from '../../../class/shared/subscription'\r\n\r\ndeclare var $ : any\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.css']\r\n})\r\nexport class FormComponent implements OnInit {\r\n\r\n  formSub : FormGroup\r\n  submitted: Boolean\r\n  nameStatus: String\r\n  registerById: Subscription\r\n\r\n  constructor(\r\n    private ssvc : SubscriptionService, \r\n    private _fb: FormBuilder, \r\n    private router: Router, \r\n    private _router: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm()\r\n    const id = this._router.snapshot.paramMap.get('id')\r\n    if(id){\r\n      this.ssvc.findById(id).subscribe(res => {\r\n        \r\n        this.registerById = res\r\n        this.nameStatus = this.registerById.activo ? \"Activo\" : \"Desactivado\"\r\n\r\n        this.initForm(res)\r\n      }, err => {\r\n        this.toastr.error(err.error.message,'Error!')\r\n      })\r\n    }\r\n  }\r\n\r\n  initForm(data ? : Subscription){\r\n    this.formSub = this._fb.group({\r\n      id: [data ? data.id : null],\r\n      titulo: [data ? data.titulo : null, Validators.required],\r\n      descripcion: [data ? data.descripcion : null, Validators.required],\r\n      periodo: [data ? data.periodo : null, Validators.required],\r\n      precio: [data ? data.precio : null, Validators.required ],\r\n      activo: [data ? data.activo : null]\r\n    })\r\n  }\r\n\r\n  get f(){ return this.formSub.controls }\r\n\r\n  changeStatus(e){\r\n    if(e.target.checked){\r\n      this.nameStatus = \"Activado\"\r\n    }else{\r\n      this.nameStatus = \"Desactivado\"\r\n    }\r\n  }\r\n\r\n  onSubmit(form){\r\n    const  data = JSON.parse(JSON.stringify(form.value))\r\n\r\n    this.submitted = true\r\n\r\n    if(this.formSub.invalid){\r\n      return;\r\n    }\r\n\r\n    if(data.id){\r\n      this.ssvc.update(data,data.id).subscribe(res => {\r\n        this.toastr.success('Subscripción modificada','Éxito!')\r\n        this.router.navigate(['/admin/subscription'])\r\n      }, err => {\r\n        this.submitted = false\r\n        this.toastr.error(err.error.message,'Error!')\r\n      })\r\n    }else{\r\n      this.ssvc.post(data).subscribe(res => {\r\n        this.toastr.success('Subscripción agregada','Éxito!')\r\n        this.router.navigate(['/admin/subscription'])\r\n      }, err => {\r\n        this.submitted = false\r\n        this.toastr.error(err.error.message,'Error!')\r\n      })\r\n    }\r\n      \r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"pd-20 bg-white border-radius-4 box-shadow mb-30 animated slideInUp\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-5 col-sm-5 text-center offset-md-3\\\">\\r\\n      <h3>Subscripciones del Sistema</h3> \\r\\n    </div>\\r\\n    <div class=\\\"col-md-4 col-sm-4 pull-right\\\">\\r\\n\\r\\n      <a routerLink=\\\"/admin/subscription/form\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\" style=\\\"border-radius: 100%\\\" title=\\\"nuevo registro\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"clearfix\\\"></div>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <table class=\\\"data-table stripe hover nowrap table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"text-center text-primary\\\">Título</th>\\r\\n          <th class=\\\"text-center text-primary\\\">Período</th>\\r\\n          <th class=\\\"text-center text-primary\\\">Precio</th>\\r\\n          <th class=\\\"text-center text-primary\\\">Empresas Asociadas</th>\\r\\n          <th class=\\\"text-center text-primary\\\">Estado</th>\\r\\n          <th class=\\\"text-center text-primary\\\">Acción</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validator} from '@angular/forms'\r\nimport { Router} from '@angular/router'\r\n\r\nimport { SubscriptionService } from '../../service/subscription.service'\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from '../../class/shared/subscription'\r\n\r\ndeclare var $ : any\r\n\r\n@Component({\r\n  selector: 'app-subscription',\r\n  templateUrl: './subscription.component.html',\r\n  styleUrls: ['./subscription.component.css']\r\n})\r\nexport class SubscriptionComponent implements OnInit {\r\n\r\n  formSub : FormGroup\r\n  subs : Subscription[]  = []\r\n\r\n  constructor(private _fb: FormBuilder, private ssvc: SubscriptionService, private toastr: ToastrService, private router: Router) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.init()\r\n  }\r\n\r\n  init(){\r\n    this.ssvc.get().subscribe(res => {\r\n      this.subs = res\r\n      this.renderTable()\r\n    },err => {\r\n      this.toastr.error(err.error.message)\r\n    })\r\n  }\r\n\r\n  renderTable(){\r\n    if($.fn.DataTable.isDataTable('.data-table')){\r\n      $('.data-table').DataTable().destroy()\r\n    }\r\n\r\n    $('.data-table').dataTable({\r\n      data: this.subs,\r\n      columns: [\r\n        {\"data\": \"titulo\"},\r\n        {\"data\": \"periodo\", \"render\": function(p){\r\n          return p+\" meses\"\r\n        }},\r\n        {\"data\": \"precio\"},\r\n        {\"data\": \"subscripciones\",\"render\": function(sub){\r\n          return sub.length\r\n        }},\r\n        {\"data\": \"activo\", \"render\" : function(act){\r\n          return act ? \"Activa\" : \"Desactivada\"\r\n        }},\r\n        {\"data\": \"id\", \"render\": function(id){\r\n          var html = `<button class=\"btn btn-link btn_editar\" title=\"Editar\" data-toggle=\"tooltip\">\r\n                      <img src=\"../../../../assets/images/editar.png\" width=\"30px\"\r\n                      </button>\r\n                      <button class=\"btn btn-link btn_destroy\" title=\"Eliminar\" data-toggle=\"tooltip\">\r\n                      <img src=\"../../../../assets/images/eliminar.png\" width=\"30px\"\r\n                      </button>`\r\n          return html\r\n        }}\r\n      ],\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n          const self = this;\r\n          // Unbind first in order to avoid any duplicate handler\r\n          // (see https://github.com/l-lin/angular-datatables/issues/87)\r\n          $('td', row).unbind('click');\r\n          $('td > .btn_editar', row).bind('click', () => {\r\n            self.editRegister(data);\r\n          });\r\n\r\n          $('td > .btn_destroy', row).bind('click', () => {\r\n            self.deleteRegister(data);\r\n          });\r\n          return row;\r\n      }\r\n    })\r\n  }\r\n\r\n  editRegister(data){\r\n    this.router.navigate(['/admin/subscription/form/',data.id])\r\n  }\r\n\r\n  deleteRegister(data){\r\n    if(confirm('Esta seguro de querer eliminar este registro?')){\r\n      this.ssvc.delete(data.id).subscribe(res => {\r\n        this.toastr.success('Proceso Completado','Éxito')\r\n        this.init()\r\n      }, err => {\r\n        this.toastr.error(err.error.message,'Error!')\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router'\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\r\n \r\nimport { SubscriptionComponent } from './subscription.component';\r\n\r\nimport { SubRoutes } from './subscription.routes';\r\nimport { FormComponent } from './form/form.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(SubRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [SubscriptionComponent, FormComponent]\r\n})\r\nexport class SubscriptionModule { }\r\n","import { Routes } from '@angular/router'\r\n\r\nimport { SubscriptionComponent } from './subscription.component'\r\nimport { FormComponent } from './form/form.component'\r\n\r\nexport const SubRoutes : Routes = [\r\n  {\r\n    path: '',\r\n    component: SubscriptionComponent\r\n  },\r\n  {\r\n    path: 'form',\r\n    component: FormComponent\r\n  },\r\n  {\r\n    path: 'form/:id',\r\n    component: FormComponent\r\n  },\r\n]"],"sourceRoot":""}